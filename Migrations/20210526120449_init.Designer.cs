// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ds3Wiki.Models;

namespace ds3Wiki.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20210526120449_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ds3Wiki.Models.Armor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Fire_protection")
                        .HasColumnType("int");

                    b.Property<int>("Lightning_protection")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("Magic_protection")
                        .HasColumnType("int");

                    b.Property<int>("Physical_protection")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("LocationId");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("ds3Wiki.Models.Catalyst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Spell_Buff")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_of_catalyst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type_of_magicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type_of_magicId");

                    b.ToTable("Catalysts");
                });

            modelBuilder.Entity("ds3Wiki.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("ds3Wiki.Models.Character_characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Influence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Character_Characteristics");
                });

            modelBuilder.Entity("ds3Wiki.Models.Enemy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Received_money")
                        .HasColumnType("int");

                    b.Property<string>("Types")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Enemies");
                });

            modelBuilder.Entity("ds3Wiki.Models.Game_info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Developer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_of_game")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games_Info");
                });

            modelBuilder.Entity("ds3Wiki.Models.Gem_Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Improvement_pathId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Improvement_pathId");

                    b.HasIndex("LocationId");

                    b.ToTable("Gem_Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Improvement_path", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Advantages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disadvantage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gem_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Improvement_Paths");
                });

            modelBuilder.Entity("ds3Wiki.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bonfire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Game_InfoId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Game_InfoId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Magic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Concentration_costs")
                        .HasColumnType("int");

                    b.Property<int>("Occupied_cells")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type_of_magicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type_of_magicId");

                    b.ToTable("Magics");
                });

            modelBuilder.Entity("ds3Wiki.Models.NPC_location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("EnemyId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("EnemyId");

                    b.HasIndex("LocationId");

                    b.ToTable("NPC_Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Sale_magic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("MagicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MagicId");

                    b.ToTable("Sale_Magics");
                });

            modelBuilder.Entity("ds3Wiki.Models.Type_of_magic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Character_characteristicId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Character_characteristicId");

                    b.ToTable("Type_Of_Magics");
                });

            modelBuilder.Entity("ds3Wiki.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Character_characteristicId")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Support_for_improvement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Types")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("Character_characteristicId");

                    b.HasIndex("LocationId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("ds3Wiki.Models.Armor", b =>
                {
                    b.HasOne("ds3Wiki.Models.Character", "Character")
                        .WithMany("Armors")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ds3Wiki.Models.Location", "Location")
                        .WithMany("Armors")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ds3Wiki.Models.Catalyst", b =>
                {
                    b.HasOne("ds3Wiki.Models.Type_of_magic", "Type_of_magic")
                        .WithMany("Catalysts")
                        .HasForeignKey("Type_of_magicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type_of_magic");
                });

            modelBuilder.Entity("ds3Wiki.Models.Gem_Location", b =>
                {
                    b.HasOne("ds3Wiki.Models.Improvement_path", "Improvement_path")
                        .WithMany("Gem_Locations")
                        .HasForeignKey("Improvement_pathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ds3Wiki.Models.Location", "Location")
                        .WithMany("Gem_Locations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Improvement_path");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ds3Wiki.Models.Location", b =>
                {
                    b.HasOne("ds3Wiki.Models.Game_info", "Game_Info")
                        .WithMany("Locations")
                        .HasForeignKey("Game_InfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game_Info");
                });

            modelBuilder.Entity("ds3Wiki.Models.Magic", b =>
                {
                    b.HasOne("ds3Wiki.Models.Type_of_magic", "Type_of_magic")
                        .WithMany("Magics")
                        .HasForeignKey("Type_of_magicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type_of_magic");
                });

            modelBuilder.Entity("ds3Wiki.Models.NPC_location", b =>
                {
                    b.HasOne("ds3Wiki.Models.Character", "Character")
                        .WithMany("NPC_Locations")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ds3Wiki.Models.Enemy", "Enemy")
                        .WithMany("NPC_Locations")
                        .HasForeignKey("EnemyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ds3Wiki.Models.Location", "Location")
                        .WithMany("NPC_Locations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Enemy");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ds3Wiki.Models.Sale_magic", b =>
                {
                    b.HasOne("ds3Wiki.Models.Character", "Character")
                        .WithMany("Sale_Magics")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ds3Wiki.Models.Magic", "Magic")
                        .WithMany("Sale_Magics")
                        .HasForeignKey("MagicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Magic");
                });

            modelBuilder.Entity("ds3Wiki.Models.Type_of_magic", b =>
                {
                    b.HasOne("ds3Wiki.Models.Character_characteristic", "Character_characteristic")
                        .WithMany("Type_Of_Magics")
                        .HasForeignKey("Character_characteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character_characteristic");
                });

            modelBuilder.Entity("ds3Wiki.Models.Weapon", b =>
                {
                    b.HasOne("ds3Wiki.Models.Character", "Character")
                        .WithMany("Weapons")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ds3Wiki.Models.Character_characteristic", "Character_characteristic")
                        .WithMany("Weapons")
                        .HasForeignKey("Character_characteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ds3Wiki.Models.Location", "Location")
                        .WithMany("Weapons")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Character_characteristic");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ds3Wiki.Models.Character", b =>
                {
                    b.Navigation("Armors");

                    b.Navigation("NPC_Locations");

                    b.Navigation("Sale_Magics");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("ds3Wiki.Models.Character_characteristic", b =>
                {
                    b.Navigation("Type_Of_Magics");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("ds3Wiki.Models.Enemy", b =>
                {
                    b.Navigation("NPC_Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Game_info", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Improvement_path", b =>
                {
                    b.Navigation("Gem_Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Location", b =>
                {
                    b.Navigation("Armors");

                    b.Navigation("Gem_Locations");

                    b.Navigation("NPC_Locations");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("ds3Wiki.Models.Magic", b =>
                {
                    b.Navigation("Sale_Magics");
                });

            modelBuilder.Entity("ds3Wiki.Models.Type_of_magic", b =>
                {
                    b.Navigation("Catalysts");

                    b.Navigation("Magics");
                });
#pragma warning restore 612, 618
        }
    }
}
