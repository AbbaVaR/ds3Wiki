// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ds3Wiki.Models;

namespace ds3Wiki.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20210519062809_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ds3Wiki.Models.Armor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Fire_protection")
                        .HasColumnType("int");

                    b.Property<int>("Lightning_protection")
                        .HasColumnType("int");

                    b.Property<int>("Magic_protection")
                        .HasColumnType("int");

                    b.Property<int>("Physical_protection")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("ds3Wiki.Models.Catalyst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Spell_Buff")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_of_catalyst")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Catalysts");
                });

            modelBuilder.Entity("ds3Wiki.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NPC_locationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sale_itemId")
                        .HasColumnType("int");

                    b.Property<int?>("Sale_magicId")
                        .HasColumnType("int");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("NPC_locationId");

                    b.HasIndex("Sale_itemId");

                    b.HasIndex("Sale_magicId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("ds3Wiki.Models.Character_characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Influence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type_of_magicId")
                        .HasColumnType("int");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type_of_magicId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Character_Characteristics");
                });

            modelBuilder.Entity("ds3Wiki.Models.Enemy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int?>("NPC_locationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Received_money")
                        .HasColumnType("int");

                    b.Property<string>("Types")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NPC_locationId");

                    b.ToTable("Enemies");
                });

            modelBuilder.Entity("ds3Wiki.Models.Game_info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Developer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name_of_game")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Games_Info");
                });

            modelBuilder.Entity("ds3Wiki.Models.Gem_Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Gem_Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Improvement_path", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Advantages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disadvantage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gem_LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Gem_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Gem_LocationId");

                    b.ToTable("Improvement_Paths");
                });

            modelBuilder.Entity("ds3Wiki.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Consumable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Negative_effectId")
                        .HasColumnType("int");

                    b.Property<int?>("Sale_itemId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Use_for")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Negative_effectId");

                    b.HasIndex("Sale_itemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ds3Wiki.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("Bonfire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gem_LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("NPC_locationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("Gem_LocationId");

                    b.HasIndex("NPC_locationId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Magic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Concentration_costs")
                        .HasColumnType("int");

                    b.Property<int>("Occupied_cells")
                        .HasColumnType("int");

                    b.Property<int?>("Sale_magicId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Sale_magicId");

                    b.ToTable("Magics");
                });

            modelBuilder.Entity("ds3Wiki.Models.NPC_location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("NPC_Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Negative_effect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeaponId");

                    b.ToTable("Negative_Effects");
                });

            modelBuilder.Entity("ds3Wiki.Models.Sale_item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Sale_Items");
                });

            modelBuilder.Entity("ds3Wiki.Models.Sale_magic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Sale_Magics");
                });

            modelBuilder.Entity("ds3Wiki.Models.Type_of_magic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalystId")
                        .HasColumnType("int");

                    b.Property<int?>("MagicId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatalystId");

                    b.HasIndex("MagicId");

                    b.ToTable("Type_Of_Magics");
                });

            modelBuilder.Entity("ds3Wiki.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<string>("Support_for_improvement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Types")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("ds3Wiki.Models.Character", b =>
                {
                    b.HasOne("ds3Wiki.Models.Armor", null)
                        .WithMany("Characters")
                        .HasForeignKey("ArmorId");

                    b.HasOne("ds3Wiki.Models.NPC_location", null)
                        .WithMany("Characters")
                        .HasForeignKey("NPC_locationId");

                    b.HasOne("ds3Wiki.Models.Sale_item", null)
                        .WithMany("Characters")
                        .HasForeignKey("Sale_itemId");

                    b.HasOne("ds3Wiki.Models.Sale_magic", null)
                        .WithMany("Charters")
                        .HasForeignKey("Sale_magicId");

                    b.HasOne("ds3Wiki.Models.Weapon", null)
                        .WithMany("Characters")
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Character_characteristic", b =>
                {
                    b.HasOne("ds3Wiki.Models.Type_of_magic", null)
                        .WithMany("Characteristics")
                        .HasForeignKey("Type_of_magicId");

                    b.HasOne("ds3Wiki.Models.Weapon", null)
                        .WithMany("Characteristics")
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Enemy", b =>
                {
                    b.HasOne("ds3Wiki.Models.NPC_location", null)
                        .WithMany("Enemies")
                        .HasForeignKey("NPC_locationId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Game_info", b =>
                {
                    b.HasOne("ds3Wiki.Models.Location", null)
                        .WithMany("Games_info")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Improvement_path", b =>
                {
                    b.HasOne("ds3Wiki.Models.Gem_Location", null)
                        .WithMany("Gems")
                        .HasForeignKey("Gem_LocationId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Item", b =>
                {
                    b.HasOne("ds3Wiki.Models.Negative_effect", null)
                        .WithMany("Items")
                        .HasForeignKey("Negative_effectId");

                    b.HasOne("ds3Wiki.Models.Sale_item", null)
                        .WithMany("Items")
                        .HasForeignKey("Sale_itemId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Location", b =>
                {
                    b.HasOne("ds3Wiki.Models.Armor", null)
                        .WithMany("Locations")
                        .HasForeignKey("ArmorId");

                    b.HasOne("ds3Wiki.Models.Gem_Location", null)
                        .WithMany("Locations")
                        .HasForeignKey("Gem_LocationId");

                    b.HasOne("ds3Wiki.Models.NPC_location", null)
                        .WithMany("Location")
                        .HasForeignKey("NPC_locationId");

                    b.HasOne("ds3Wiki.Models.Weapon", null)
                        .WithMany("Locations")
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Magic", b =>
                {
                    b.HasOne("ds3Wiki.Models.Sale_magic", null)
                        .WithMany("Magics")
                        .HasForeignKey("Sale_magicId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Negative_effect", b =>
                {
                    b.HasOne("ds3Wiki.Models.Weapon", null)
                        .WithMany("Effects")
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Type_of_magic", b =>
                {
                    b.HasOne("ds3Wiki.Models.Catalyst", null)
                        .WithMany("Types_of_magic")
                        .HasForeignKey("CatalystId");

                    b.HasOne("ds3Wiki.Models.Magic", null)
                        .WithMany("Types_of_magic")
                        .HasForeignKey("MagicId");
                });

            modelBuilder.Entity("ds3Wiki.Models.Armor", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Catalyst", b =>
                {
                    b.Navigation("Types_of_magic");
                });

            modelBuilder.Entity("ds3Wiki.Models.Gem_Location", b =>
                {
                    b.Navigation("Gems");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("ds3Wiki.Models.Location", b =>
                {
                    b.Navigation("Games_info");
                });

            modelBuilder.Entity("ds3Wiki.Models.Magic", b =>
                {
                    b.Navigation("Types_of_magic");
                });

            modelBuilder.Entity("ds3Wiki.Models.NPC_location", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Enemies");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ds3Wiki.Models.Negative_effect", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ds3Wiki.Models.Sale_item", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("ds3Wiki.Models.Sale_magic", b =>
                {
                    b.Navigation("Charters");

                    b.Navigation("Magics");
                });

            modelBuilder.Entity("ds3Wiki.Models.Type_of_magic", b =>
                {
                    b.Navigation("Characteristics");
                });

            modelBuilder.Entity("ds3Wiki.Models.Weapon", b =>
                {
                    b.Navigation("Characteristics");

                    b.Navigation("Characters");

                    b.Navigation("Effects");

                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
